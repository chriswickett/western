{"filter":false,"title":"Untitled","tooltip":"/Untitled","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":20}},"text":"// Create the canvas"},{"action":"insertText","range":{"start":{"row":0,"column":20},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":338,"column":0}},"lines":["","var canvas = document.createElement(\"canvas\");","var ctx = canvas.getContext(\"2d\");","","canvas.width = 512;","canvas.height = 480;","","document.body.appendChild(canvas);","","// Initialise settings","var portalsReached = 0;","var highScore = 0;","var highScoreReached = false;","var isPaused = false;","var levelPaused = false;","","// Sounds","var portalSound = new Audio('audio/magic.mp3');","var monsterSound = new Audio('audio/monster-groan.mp3');","var highScoreSound = new Audio('audio/high-score.wav');","var dynamiteSound = new Audio('audio/bang.wav');","","// Background image","var bgReady = false;","var bgImage = new Image();","","bgImage.onload = function () {","  bgReady = true;","};","","bgImage.src = \"images/background.png\";","","var mapBounds = {","  top: 32,","  bottom: 416,","  left: 32,","  right: 448","}","","// Hero","var heroReady = false;","var heroImage = new Image();","","heroImage.onload = function () {","  heroReady = true;","};","","heroImage.src = \"images/hero-custom.png\";","","var hero = {","  name: \"Hero\",","  speed: 380, // movement in pixels per second","  x: 64,","  y: 64","};","","// Monster","var monsterReady = false;","var monsterImage = new Image();","","monsterImage.onload = function () {","  monsterReady = true;","};","","monsterImage.src = \"images/monster.png\";","","var monster = {","  name: \"Monster\",","  speed: 32, // movement in pixels per second","  x: 360,","  y: 360","};","","// Dynamite","var dynamiteReady = false;","var dynamiteImage = new Image();","","dynamiteImage.onload = function () {","  dynamiteReady = true;","};","","dynamiteImage.src = \"images/tnt.png\";","","var dynamite = {","  x: 0,","  y: 0","};","","// Portal","var portal = {","  x: canvas.width / 2,","  y: canvas.height / 2","};","","var decidePaused = function() {","  if (isPaused == true) {","    isPaused = false;","  } else {","    isPaused = true;","  }","};","","var distanceBetween = function (objOne, objTwo) {","  xDist = Math.abs(objOne.x - objTwo.x);","  yDist = Math.abs(objOne.y - objTwo.y);","  dist = Math.sqrt(xDist * xDist + yDist * yDist);","  return Math.round(dist);","}","var isTouching = function (objectOne, objectTwo, threshold) {","  var threshold = threshold || 24;","  dist = distanceBetween(objectOne, objectTwo);","  return (dist < threshold);","};","","var getRandomInteger = function (min, max) {","  return Math.floor(Math.random() * (max - min + 1)) + min;","}","","var isTooClose = function(object) {","  tooClose = false;","  targets = [hero, monster, portal, dynamite];","  targets.splice(targets.indexOf(object), 1);","","  targets.forEach(function(target) {","    if (isTouching(object, target, 180)) {","      tooClose = true;","    }","  });","  return tooClose;","}","","var respawn = function (object, x, y) {","  x = x || getRandomInteger(mapBounds.left, mapBounds.right);","  y = y || getRandomInteger(mapBounds.top, mapBounds.bottom);;","  object.x = x;","  object.y = y;","  if (isTooClose(object) === true) {","    respawn(object);","  }","}","","var respawnAll = function () {","  respawn(hero);","  respawn(monster);","  respawn(portal);","  respawn(dynamite);","}","","// Game functions","var updateHighScore = function() {","  if (portalsReached > highScore) {","    if (highScoreReached == false) {","      highScoreSound.play();","      highScoreReached = true;  ","    }","    highScore = portalsReached;","  }","}","","var gameOver = function() {","  portalsReached = 0;","  monster.speed = 32;","  highScoreReached = false;","  respawnAll();","}","","var pauseLevel = function(pauseTime) {","  levelPaused = true;","  setTimeout(function() {levelPaused = false},pauseTime)","}","","var nextLevel = function() {","  pauseLevel(500);","  portalSound.play();","  portalsReached = portalsReached + 1;","  updateHighScore();","  monster.speed += 4;","  respawnAll();","}","","// Handle keyboard controls","var keysDown = {};","","addEventListener(\"keydown\", function (e) {","  keysDown[e.keyCode] = true;","});","","addEventListener(\"keyup\", function (e) {","  delete keysDown[e.keyCode];","  if (e.keyCode == 27) {","    decidePaused();","  }","});","","","// Update game objects","","var update = function (timeSinceLastFrame) {","","  var nexX = hero.x;","  var newY = hero.y;","","  // Get keys","  if (38 in keysDown) { // Up","    var newY = hero.y - (hero.speed * timeSinceLastFrame);","  }","  if (40 in keysDown) { // Down","    var newY = hero.y + (hero.speed * timeSinceLastFrame);","  }","  if (37 in keysDown) { // Left","    var newX = hero.x - (hero.speed * timeSinceLastFrame);","  }","  if (39 in keysDown) { // Right","    var newX = hero.x + (hero.speed * timeSinceLastFrame);","  }","","  // Move hero if within map boundary","  if (newX > mapBounds.left && newX < mapBounds.right) { ","    hero.x = newX;","  }","","  if (newY > mapBounds.top && newY < mapBounds.bottom) { ","    hero.y = newY;","  }","","  // Monster AI","  // var newSpeed = (distanceBetween(hero, monster) < 100) ? monster.speed + 64 : monster.speed;","  var monsterMoveDistance = monster.speed * timeSinceLastFrame;","","  var gapY = hero.y - monster.y;","  var gapX = hero.x - monster.x;","","  if (gapY > 4) { // Move down","    monster.y += monsterMoveDistance;","  }","","  if (gapY < -4) { // Move up","    monster.y -= monsterMoveDistance;","  }","","  if (gapX > 4) { // Move left","    monster.x += monsterMoveDistance;","  }","","  if (gapX < -4) { // Move right","    monster.x -= monsterMoveDistance;","  }","","  // Success and failure criteria","  if (isTouching(hero, monster, 24)) { // If monster catches you","    monsterSound.play();","    gameOver();","  }","","  if (isTouching(hero, portal, 26)) { // If you win","    nextLevel();","  };","","  if (isTouching(hero, dynamite, 24)) { // If you touch dynamite","    dynamiteSound.play();","    gameOver();","  }","","  if (isTouching(monster, dynamite, 24)) { // If you touch dynamite","    dynamiteSound.play();","    // Replace this with a proper killMonster() method.","    monster.x = 9999;","    monster.y = 9999;","    dynamite.x = -9999;","    dynamite.y = -9999;","  }","","};","","// Draw everything","var render = function () {","","  ctx.drawImage(bgImage, 0, 0);","  ctx.drawImage(heroImage, hero.x, hero.y);","  ctx.drawImage(monsterImage, monster.x, monster.y);","  ctx.drawImage(dynamiteImage, dynamite.x, dynamite.y);","","  ctx.fillStyle = \"rgb(0,0,0)\";","  ctx.fillRect (portal.x, portal.y, 32, 32);","","  // Score","  ctx.fillStyle = \"rgba(250, 250, 250, 1)\";","  ctx.font = \"24px Helvetica\";","  ctx.textAlign = \"left\";","  ctx.textBaseline = \"top\";","","","  ctx.font = \"24px Helvetica\";","  ctx.textAlign = \"left\";","  ctx.textBaseline = \"top\";","  ctx.fillText(\"Portals reached: \" + portalsReached, 4, 0);","  ctx.textAlign = \"right\";","","  highScoreColor = (highScoreReached == true) ? \"rgba(255, 0, 250, 1)\" : \"rgba(250, 250, 250, 1)\";","","  ctx.fillStyle = highScoreColor;","","  ctx.fillText(\"High score: \" + highScore, canvas.width - 4, 0);","","  ctx.font = \"48px Impact\";","  ctx.textAlign = \"center\";","  ctx.textBaseline = \"middle\";","","  if (isPaused == true) {","    ctx.fillText(\"PAUSED\", canvas.width / 2, canvas.height / 2);","  }","","};","","var gameLoop = function () {","  var now = Date.now();","  var delta = now - then;","  ","  if (isPaused == false && levelPaused == false) {","    update(delta / 1000);  ","  }","","  if (bgReady && heroReady && monsterReady && dynamiteReady) {","    render();","  }","","  then = now;","  requestAnimationFrame(gameLoop); // Request to do this again ASAP","};","","var then = Date.now();","respawnAll();","gameLoop();","","// TODO","// Add focusout detector in case you open a new browser tab, minimise etc","// Add dynamite sounds"]},{"action":"insertText","range":{"start":{"row":338,"column":0},"end":{"row":338,"column":40}},"text":"// Add random appearance of the dynamite"}]}]]},"ace":{"folds":[],"scrolltop":3997,"scrollleft":0,"selection":{"start":{"row":338,"column":40},"end":{"row":338,"column":40},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":284,"state":"start","mode":"ace/mode/text"}},"timestamp":1412021480279,"hash":"8ca5effcfdd0c864f94e651f859682872d0f2fa1"}